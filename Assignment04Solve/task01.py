# -*- coding: utf-8 -*-
"""task01.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1p2gFZujC4ddNjw9PL6lrlUDWkr5KrmMm
"""

def readFile():
  f =open("input1.txt", "r")
  n = f.readline()
  
  print(n.strip())
  n = n.strip()
  print(type(n))
  n=int(n)
  print(type(n))
 
  
  c = f.readline()
  c = c.strip()
  c = int(c)
  print(c)
  buildGraphUsingListofLists(c,f)


#----------------------------
def buildGraphUsingDictionary(c,f): 
    
  graph = {}
  counter = 0
  
  while (counter<c):
    line = f.readline()
    a,b = line.split(",") 
    b = b.strip()
    if(a in graph):
      graph[a].append(b)
    else:
      graph[a] = [b]
    
    print(a)
    print(b)    
    counter+=1    

  print(graph)
  printGraph(graph, None)
       
#-----------------------------------

def printGraph(graph,listGraph):
  out_file= open ('output1.txt', "w")
  
  if listGraph== None :
    for a,b in sorted(graph.items()) : 
      flag=""
      
      for x in range (len(b)) :
        
        if x== len(b)-1 :
          flag= flag+b[x]
        else:
          flag=flag+b[x]+','
      
      out_file.write( str(graph)+'\n' )
      print(a,"->", flag)
            
  else :
    for y in range(len ( listGraph)) :
      b=''
      
      if listGraph[y] !=None :
        b =str(listGraph[y] ) [1:-1]
        print(y,"->", b)
        out_file.write(f'{y} ->{b}\n')
#-------------------------        

def buildGraphUsingListofLists(c,f):
  listGraph = []
  listGraph = [None]* c
  
  temp = 0
  
  while (temp< c) :
    temp=temp +1
    read_line = f.readline() 
    
    x,y= read_line.split (',') 
    y= y.strip()
    
    x= int(x)
    y= int(y)
    
    if listGraph [x] ==None :
      listGraph[x]= [y]
    
    else :
      listGraph[x] .append(y)
    
  printGraph(None,listGraph)
  
  return 

readFile()